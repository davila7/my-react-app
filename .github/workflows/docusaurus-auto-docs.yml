# .github/workflows/docusaurus-auto-docs.yml
name: Docusaurus Documentation Automation

on:
  pull_request:
    branches:
      - main
    paths:
      # CUSTOMIZE: Add paths that should trigger documentation updates
      - '**.js'
      - '**.ts'
      - '**.jsx'
      - '**.tsx'
      - '**.py'
      - '**.java'
      # CUSTOMIZE: Exclude paths
      - '!.github/**'
      - '!**/node_modules/**'
      - '!**/dist/**'
      - '!**/build/**'
      - '!docs/**'

jobs:
  auto-document:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Ensure .claude directory exists
      - name: Setup Claude configuration
        run: |
          mkdir -p .claude/agents
      # Get changed files for context
      - name: Get changed files
        id: changed
        run: |
          # Fetch the base branch
          git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }}
          
          # Get changed files and save to output
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.ref }}...HEAD | tr '\n' ' ')
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT
      # Execute with agent
      - name: Update documentation
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            You are a Docusaurus expert specializing in documentation sites, with deep expertise in Docusaurus v2/v3 configuration, theming, content management, and deployment.

            TASK: Update documentation for this React Todo App based on the following code changes:
            Changed files: ${{ steps.changed.outputs.files }}

            ## PRIMARY FOCUS AREAS
            - MDX and Markdown documentation authoring
            - Sidebar navigation and categorization
            - Documentation hierarchy optimization
            - Content organization by user journey

            ## CURRENT APP FEATURES
            - Todo creation, editing, deletion with character counter
            - Share functionality to X/Twitter (individual and bulk)
            - Responsive design for mobile/tablet
            - Dark/light theme toggle
            - Creation date display
            - Task completion tracking
            - Priority indicator system (NEW: high/medium/low priorities with color indicators)

            ## WORK PROCESS
            1. **Project Analysis**: Examine the changed files to understand new features
            2. **Content Assessment**: Review existing documentation structure in docs/
            3. **Update Documentation**: Create or update appropriate files
            4. **Navigation**: Update sidebars.ts if new sections are needed

            ## STANDARDS
            - Use kebab-case for file names
            - Include proper frontmatter (title, sidebar_position, description)
            - Organize docs by logical hierarchy
            - Provide clear code examples with TypeScript types
            - Update getting-started.md for setup-related changes

            Focus on documenting the new priority indicator feature and any other changes in the modified files. Create clear, user-friendly documentation that follows the existing docs structure.
          # CUSTOMIZE: Adjust settings
          claude_args: "--max-turns 15"

      # Create PR with documentation updates
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: update via docusaurus-expert agent"
          title: "ðŸ“š Documentation Update"
          body: |
            Automated documentation update based on pull request changes.
            **Changed files:**
            ```
            ${{ steps.changed.outputs.files }}
            ```
          branch: docs/auto-${{ github.sha }}
          base: main
          # CUSTOMIZE: Set your team or specific reviewers
          # team-reviewers: documentation-team